--- drivers/target/iscsi/iscsi_target.c
+++ drivers/target/iscsi/iscsi_target.c
@@ -3931,8 +3931,6 @@
 {
 	int ret = 0;
 	struct iscsi_conn *conn = arg;
-	bool conn_freed = false;
-
 	/*
 	 * Allow ourselves to be interrupted by SIGINT so that a
 	 * connection recovery / failure event can be triggered externally.
@@ -3958,14 +3956,12 @@
 			goto transport_err;
 
 		ret = iscsit_handle_response_queue(conn);
-		if (ret == 1) {
+		if (ret == 1)
 			goto get_immediate;
-		} else if (ret == -ECONNRESET) {
-			conn_freed = true;
+		else if (ret == -ECONNRESET)
 			goto out;
-		} else if (ret < 0) {
+		else if (ret < 0)
 			goto transport_err;
-		}
 	}
 
 transport_err:
@@ -3975,13 +3971,8 @@
 	 * responsible for cleaning up the early connection failure.
 	 */
 	if (conn->conn_state != TARG_CONN_STATE_IN_LOGIN)
-		iscsit_take_action_for_connection_exit(conn, &conn_freed);
+		iscsit_take_action_for_connection_exit(conn);
 out:
-	if (!conn_freed) {
-		while (!kthread_should_stop()) {
-			msleep(100);
-		}
-	}
 	return 0;
 }
 
@@ -4082,7 +4073,6 @@
 	u32 checksum = 0, digest = 0;
 	struct iscsi_conn *conn = arg;
 	struct kvec iov;
-	bool conn_freed = false;
 	/*
 	 * Allow ourselves to be interrupted by SIGINT so that a
 	 * connection recovery / failure event can be triggered externally.
@@ -4094,7 +4084,7 @@
 	 */
 	rc = wait_for_completion_interruptible(&conn->rx_login_comp);
 	if (rc < 0 || iscsi_target_check_conn_state(conn))
-		goto out;
+		return 0;
 
 	if (conn->conn_transport->transport_type == ISCSI_INFINIBAND) {
 		struct completion comp;
@@ -4179,13 +4169,7 @@
 transport_err:
 	if (!signal_pending(current))
 		atomic_set(&conn->transport_failed, 1);
-	iscsit_take_action_for_connection_exit(conn, &conn_freed);
-out:
-	if (!conn_freed) {
-		while (!kthread_should_stop()) {
-			msleep(100);
-		}
-	}
+	iscsit_take_action_for_connection_exit(conn);
 	return 0;
 }
 
@@ -4561,11 +4545,8 @@
 	 * always sleep waiting for RX/TX thread shutdown to complete
 	 * within iscsit_close_connection().
 	 */
-	if (conn->conn_transport->transport_type == ISCSI_TCP) {
+	if (conn->conn_transport->transport_type == ISCSI_TCP)
 		sleep = cmpxchg(&conn->tx_thread_active, true, false);
-		if (!sleep)
-			return;
-	}
 
 	atomic_set(&conn->conn_logout_remove, 0);
 	complete(&conn->conn_logout_comp);
@@ -4581,11 +4562,8 @@
 {
 	int sleep = 1;
 
-	if (conn->conn_transport->transport_type == ISCSI_TCP) {
+	if (conn->conn_transport->transport_type == ISCSI_TCP)
 		sleep = cmpxchg(&conn->tx_thread_active, true, false);
-		if (!sleep)
-			return;
-	}
 
 	atomic_set(&conn->conn_logout_remove, 0);
 	complete(&conn->conn_logout_comp);
