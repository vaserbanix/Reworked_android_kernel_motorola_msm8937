--- fs/pstore/ram_core.c
+++ fs/pstore/ram_core.c
@@ -80,15 +80,16 @@
 	} while (atomic_cmpxchg(&prz->buffer->size, old, new) != old);
 }
 
+static DEFINE_RAW_SPINLOCK(buffer_lock);
+
 /* increase and wrap the start pointer, returning the old value */
 static size_t buffer_start_add_locked(struct persistent_ram_zone *prz, size_t a)
 {
 	int old;
 	int new;
-	unsigned long flags = 0;
+	unsigned long flags;
 
-	if (!(prz->flags & PRZ_FLAG_NO_LOCK))
-		raw_spin_lock_irqsave(&prz->buffer_lock, flags);
+	raw_spin_lock_irqsave(&buffer_lock, flags);
 
 	old = atomic_read(&prz->buffer->start);
 	new = old + a;
@@ -96,8 +97,7 @@
 		new -= prz->buffer_size;
 	atomic_set(&prz->buffer->start, new);
 
-	if (!(prz->flags & PRZ_FLAG_NO_LOCK))
-		raw_spin_unlock_irqrestore(&prz->buffer_lock, flags);
+	raw_spin_unlock_irqrestore(&buffer_lock, flags);
 
 	return old;
 }
@@ -107,10 +107,9 @@
 {
 	size_t old;
 	size_t new;
-	unsigned long flags = 0;
+	unsigned long flags;
 
-	if (!(prz->flags & PRZ_FLAG_NO_LOCK))
-		raw_spin_lock_irqsave(&prz->buffer_lock, flags);
+	raw_spin_lock_irqsave(&buffer_lock, flags);
 
 	old = atomic_read(&prz->buffer->size);
 	if (old == prz->buffer_size)
@@ -122,8 +121,7 @@
 	atomic_set(&prz->buffer->size, new);
 
 exit:
-	if (!(prz->flags & PRZ_FLAG_NO_LOCK))
-		raw_spin_unlock_irqrestore(&prz->buffer_lock, flags);
+	raw_spin_unlock_irqrestore(&buffer_lock, flags);
 }
 
 static size_t (*buffer_start_add)(struct persistent_ram_zone *, size_t) = buffer_start_add_atomic;
@@ -489,7 +487,6 @@
 			 prz->buffer->sig);
 	}
 
-	/* Rewind missing or invalid memory area. */
 	prz->buffer->sig = sig;
 	persistent_ram_zap(prz);
 
@@ -516,7 +513,7 @@
 
 struct persistent_ram_zone *persistent_ram_new(phys_addr_t start, size_t size,
 			u32 sig, struct persistent_ram_ecc_info *ecc_info,
-			unsigned int memtype, u32 flags)
+			unsigned int memtype)
 {
 	struct persistent_ram_zone *prz;
 	int ret = -ENOMEM;
@@ -527,10 +524,6 @@
 		goto err;
 	}
 
-	/* Initialize general buffer state. */
-	raw_spin_lock_init(&prz->buffer_lock);
-	prz->flags = flags;
-
 	ret = persistent_ram_buffer_map(start, size, prz, memtype);
 	if (ret)
 		goto err;
